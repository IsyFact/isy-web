<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-autowire="byName">

	<!-- ======================================================================
		Diese Bean sorgt fuer die Platzhalter-Ersetzung in 
		Spring-Konfigurationsdateien.
		====================================================================== -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!-- 
		<property name="locations">
			<list>
				<value>
					config.properties
				</value>
			</list>
		</property>
        -->
	</bean>

	<!-- Drives transactions using local JPA APIs -->
	<!-- bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean -->

	<!-- ======================================================================
		In dieser Bean wird eine EntityManagerFactory erzeugt
		====================================================================== -->
	<!-- bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource">
			<ref bean="appDataSource"/> 
		</property>
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.dialect" value="org.hibernate.dialect.Oracle10gDialect" />
				<entry key="hibernate.connection.isolation" value="4" />
				<entry key="hibernate.jdbs.use_streams_for_binary" value="org.hibernate.dialect.Oracle10gDialect" />
			</map>
		</property>
	</bean -->

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<description>The data source.</description>
		<property name="driverClassName">
			<value>oracle.jdbc.OracleDriver</value>
		</property>
		<property name="url"
			value="${ldap.url}" />
		<property name="username"
			value="${ldap.userdn}" />
		<property name="password"
			value="${ldap.password}" />
		<property name="maxActive"
			value="${pooling.maxActive}" />
		<property name="maxIdle"
			value="${pooling.maxIdle}" />
	</bean>

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.dialect" value="org.hibernate.dialect.Oracle10gDialect" />
				<entry key="hibernate.connection.isolation" value="4" />
				<entry key="hibernate.jdbs.use_streams_for_binary" value="org.hibernate.dialect.Oracle10gDialect" />
			</map>
		</property>
	</bean>
	
	<!-- Singleton for usage inside conversation container persistency -->
	<bean id="webFlowConversationService"
		class="de.bund.bva.isyfact.common.web.webflow.gui.DbBasedConversationContainerStoreService">
		<constructor-arg ref="entityManagerFactory"/>
	</bean>
	
	<!-- Singleton for usage inside conversation container persistency -->
	<bean id="dbCleaner"
		class="de.bund.bva.isyfact.common.web.webflow.gui.test.DBTableCleaner">
		<constructor-arg ref="entityManagerFactory"/>
	</bean>
	
</beans>