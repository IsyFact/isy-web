<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:composite="http://java.sun.com/jsf/composite"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:jsf="http://xmlns.jcp.org/jsf"
      xmlns:isyi="http://java.sun.com/jsf/composite/isyfact/internal">

    <!-- Ein Eingabefeld innerhalb Formularen. -->

    <composite:interface preferred="false" shortDescription="DEPRECATED This module is deprecated and will be removed in a future release. It is recommended to use isy-angular-widgets instead.">

        <!-- Die Referenz des Objekts. -->
        <composite:attribute name="reference" required="true" />

        <!-- Erlaubt, eine spezielle ID zu setzen, um die Komponente z.B. für JavaScript oder Tests zugreifbar zu machen. Diese wird im Attribut data-isy-custom-id eingetragen. -->
        <composite:attribute name="customId" required="false" />

        <!-- Der Wert für das Databinding im Eingabefeld -->
        <composite:attribute name="value" required="true" />
        <!-- Ob die Eingabe ein Pflichteingabe ist. -->
        <composite:attribute name="required" type="Boolean" default="false" />
        <!-- Ob die Darstellung nur lesend erfolgen soll -->
        <composite:attribute name="readonly" type="Boolean" default="false" />
        <!-- Der Text für das Label -->
        <composite:attribute name="label" type="String" required="false" />
        <!-- Die CSS-Klasse für das Label. -->
        <composite:attribute name="labelStyleClass" type="String"
                default="col-lg-6" />
        <!-- Die CSS-Klasse für den Eingabebereich. -->
        <composite:attribute name="inputStyleClass" type="String"
                default="col-lg-6" />
        <!-- Der Platzhalter, welcher im Eingabefeld angezeigt wird. -->
        <composite:attribute name="placeholder" type="String" required="false" />
        <!-- Die Eingabemaske.-->
        <composite:attribute name="inputmask" type="String" required="false" />
        <!-- Die Eingabemaske: ob text soll überschrieben werden beim eintippen.-->
        <composite:attribute name="inputmaskInsertMode" type="Boolean"
                required="false" default="true" />
        <!-- Die maximale Länge der Eingabe. -->
        <composite:attribute name="maxlength" type="Integer" required="false"
                default="255" />
        <!-- Die maximale Breite des Eingabefeldes. -->
        <composite:attribute name="width" type="String" required="false"
                default="100%" />
        <!-- Zur aktuellen Druckansicht-Anzeige aus dem BasisModel. -->
        <composite:attribute name="showPrintView" type="Boolean"
                default="#{not empty basisModel and basisModel.showPrintView}" />
        <!-- Tooltip. -->
        <composite:attribute name="tooltip" type="String" default="" />
        <!-- Ob das Eingabefeld deaktiviert ist. -->
        <composite:attribute name="disabled" type="Boolean" default="false" />

        <!-- Ein spezifisches Validation-Model, falls benötigt. -->
        <composite:attribute name="validationModel" required="false"
                default="#{validationModel}" />
        <!-- Eine spezifsche globale Konfiguration, falls benötigt. -->
        <composite:attribute name="globalConfig" required="false"
                default="#{globalConfigurationModel}" />

        <!-- Die Referenz des Objekts. -->
        <composite:attribute name="charpicker" required="false" type="String"/>

        <!-- Datatype of the input field. -->
        <composite:attribute name="datentyp" type="String" required="false" default="DATENTYP_E"/>

        <!-- Der Inhalt der rechts vom Listpicker angezeigt wird. -->
        <composite:facet name="contentRight" required="false" />

        <!-- Der Typ des Eingabefelds, so dass diese Komponente z.B. auch für Passwort-Felder verwendet werden kann. Mögliche Werte alle Werte für das Feld type des HTML Input Felds. -->
        <composite:attribute name="type" type="String" required="false"
                default="text" />

    <!-- Attribut fourEyesMode, 4 Augen Prinzip Mode (locked, unlock) -->
        <composite:attribute name="fourEyesMode" type="String" required="true" />
    <!-- Attribut fourEyesLastValue, 4 Augen Prinzip Mode (locked, unlock) -->
        <composite:attribute name="fourEyesLastValue" type="String" />
    </composite:interface>

    <composite:implementation>

        <c:set var="fourEyesColor" value="#{'locked' eq cc.attrs.fourEyesMode ? 'red' : 'grey'}" />

        <!-- Validierungsfehler bestimmen -->
        <ui:param name="validationMessages"
                value="#{cc.attrs.validationModel.getValidationMessagesForReference(cc.attrs.reference)}" />
        <ui:param name="existsValidationError"
                value="#{not empty validationMessages}" />

        <div
                class="form-group#{existsValidationError ? ' has-error has-feedback': ''}"
                data-isy-custom-id="#{cc.attrs.customId}" >

            <ui:fragment
                    rendered="#{not (cc.attrs.readonly or cc.attrs.showPrintView)}">
                <isyi:formValidationLabel value="#{cc.attrs.label}"
                        forField="#{cc.clientId}:#{jsfHelper.escapeIdentifier(cc.attrs.reference)}_with_inputmask"
                        required="#{cc.attrs.required}"
                        styleClass="#{cc.attrs.labelStyleClass}"
                        rendered="#{not empty cc.attrs.inputmask}" />

                <isyi:formValidationLabel value="#{cc.attrs.label}"
                        forField="#{cc.clientId}:#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                        required="#{cc.attrs.required}"
                        styleClass="#{cc.attrs.labelStyleClass}"
                        rendered="#{empty cc.attrs.inputmask}" />
            </ui:fragment>
            <ui:fragment
                    rendered="#{cc.attrs.readonly and not cc.attrs.showPrintView}">
                <isyi:formValidationLabel value="#{cc.attrs.label}"
                        forField="#{cc.clientId}:readonly_#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                        required="#{cc.attrs.required}"
                        styleClass="#{cc.attrs.labelStyleClass}" />
            </ui:fragment>
            <ui:fragment rendered="#{cc.attrs.showPrintView}">
                <isyi:formValidationLabel value="#{cc.attrs.label}"
                        forField="#{cc.clientId}:disabled_#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                        required="#{cc.attrs.required}"
                        styleClass="#{cc.attrs.labelStyleClass}" />
            </ui:fragment>


            <div class="#{cc.attrs.inputStyleClass}">
                <div class="input-group">
                    <ui:fragment rendered="#{not (cc.attrs.readonly or cc.attrs.showPrintView)}">

                        <ui:param name="charPickerClass" value="#{empty cc.attrs.charpicker or empty cc.attrs.globalConfig or not cc.attrs.globalConfig.jsEnabled ? '' :
                          cc.attrs.charpicker == 'dinSpec' ? ' inputWithCharPickerDinNorm' :
                          cc.attrs.charpicker == 'special' ? ' inputWithSpecialCharPicker' : ''}" />

                        <!-- input -->
                        <ui:fragment rendered="#{empty cc.attrs.inputmask}">
                            <input type="#{cc.attrs.type}"
                                    class="form-control#{existsValidationError ? ' invalid': ''}#{charPickerClass}"
                                    id="#{cc.clientId}:#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                                    placeholder="#{cc.attrs.placeholder}"
                                    jsf:value="#{cc.attrs.value}" maxlength="#{cc.attrs.maxlength}"
                                    style="width: #{cc.attrs.width}" title="#{cc.attrs.tooltip}"
                                    data-datentyp="${cc.attrs.datentyp}">
                                <f:attribute name="disabled" value="#{cc.attrs.disabled}" />
                            </input>
                        </ui:fragment>

                        <!-- input mit inputmask -->
                        <ui:fragment rendered="#{not empty cc.attrs.inputmask}">
                            <input type="#{cc.attrs.type}"
                                    class="form-control#{existsValidationError ? ' invalid': ''}#{charPickerClass}"
                                    id="#{cc.clientId}:#{jsfHelper.escapeIdentifier(cc.attrs.reference)}_with_inputmask"
                                    jsf:value="#{cc.attrs.value}"
                                    placeholder="#{cc.attrs.placeholder}"
                                    data-isymask-mask="#{cc.attrs.inputmask}"
                                    data-isymask-insertmode="#{cc.attrs.inputmaskInsertMode}"
                                    maxlength="#{cc.attrs.maxlength}" style="width: #{cc.attrs.width}"
                                    title="#{cc.attrs.tooltip}"
                                    data-datentyp="${cc.attrs.datentyp}">
                                <f:attribute name="disabled" value="#{cc.attrs.disabled}" />
                            </input>
                        </ui:fragment>
                        <ui:fragment rendered="#{not empty charPickerClass}">

                            <ui:param name="pickerButtonClass" value="#{empty cc.attrs.charpicker ? '' :
                                cc.attrs.charpicker == 'dinSpec' ? 'charpicker-open-button' :
                                cc.attrs.charpicker == 'special' ? 'special-char-button' : ''}" />

                            <a
                                    class="btn btn-icon input-group-addon char-picker-button #{pickerButtonClass}"
                                    title="#{msg_isyweb.MEL_Charpicker_Tooltip}"> <span
                                    class="icon fa-keyboard" />
                            </a>
                        </ui:fragment>
                        <composite:insertChildren />
                    </ui:fragment>
                    <ui:fragment rendered="#{cc.attrs.readonly and not cc.attrs.showPrintView}">
                        <h:outputText styleClass="form-control readonly" style="width: #{cc.attrs.width}"
                                      id="readonly_#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                                      value="#{cc.attrs.value}"/>
                    </ui:fragment>
                    <ui:fragment rendered="#{cc.attrs.showPrintView}">
                        <input type="#{cc.attrs.type}" class="form-control"
                                id="#{cc.clientId}:disabled_#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                                disabled="disabled" jsf:value="#{cc.attrs.value}"
                                style="width: #{cc.attrs.width}" />
                    </ui:fragment>

                    <!-- Das FourEyesIcon -->
                    <a data-delay="100" data-trigger="hover" data-title="" data-placement="top"
                            data-content="#{cc.attrs.fourEyesLastValue}"
                            data-toggle="#{empty cc.attrs.fourEyesLastValue?'':'tooltip'}"
                            class="btn btn-link btn-tooltip #{empty cc.attrs.fourEyesLastValue?'':'rf-popover'}
      #{not empty cc.attrs.icon ? 'formactioninputvieraugenlink' : 'formactioninputvieraugenlinkwithicon'}
      #{existsValidationError and not empty cc.attrs.icon ? 'formactioninputvieraugenhaserror': ''}"
                            data-original-title="" title="">
                        <button type="submit" jsf:id="fourEyesIcon" jsf:action="DEFAULT_ACTION" disabled="disabled"
                                class="btn btn-icon btn-icon-small input-group-addon #{not cc.attrs.disabled?'input-only':''} formactioninputvieraugenbutton">
                            <f:attribute name="disabled" value="#{cc.attrs.disabled}" />
                            <span class="icon icon-unlock" style="color: #{fourEyesColor}"> </span>
                        </button>
                    </a>

                </div>
                <!-- Bei Validierungsfehlern -->
                <isyi:formValidationIcon
                        validationModel="#{cc.attrs.validationModel}"
                        reference="#{cc.attrs.reference}" inputGroupAddonExistent="false" />
            </div>
            <composite:renderFacet name="contentRight" />
        </div>
    </composite:implementation>

</html>
