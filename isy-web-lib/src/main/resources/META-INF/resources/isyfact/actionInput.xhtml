<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:composite="http://java.sun.com/jsf/composite"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:jsf="http://xmlns.jcp.org/jsf"
      xmlns:isy="http://java.sun.com/jsf/composite/isyfact"
      xmlns:isyi="http://java.sun.com/jsf/composite/isyfact/internal"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:fn="http://java.sun.com/jsp/jstl/functions">

<!-- Datumsfeld für Formulareingaben. -->

<composite:interface preferred="false" shortDescription="DEPRECATED This module is deprecated and will be removed in a future release. It is recommended to use isy-angular-widgets instead.">

    <!-- Die Referenz des Objekts. -->
    <composite:attribute name="reference" required="true"/>
    <!-- Der Wert für das Databinding im Eingabefeld -->
    <composite:attribute name="value" required="true"/>
    <!-- Der Platzhalter, welcher im Eingabefeld angezeigt wird. -->
    <composite:attribute name="placeholder" type="java.lang.String"
                         required="false"/>
    <!-- Die maximale Länge der Eingabe. -->
    <composite:attribute name="maxlength" type="Integer" required="false"
                         default="20"/>

    <!-- Techn. erforderliches Attribut (JSF-Passthrough Attribut), wird jedoch vom System auf action="DEFAULT_ACTION" umgeschrieben -->
    <composite:attribute name="action" targets="buttonIcon" required="true"/>
    <!-- Das benutzte Icon. -->
    <composite:attribute name="icon" type="String" required="true"/>
    <!-- Die Farbe des Icons. -->
    <composite:attribute name="iconColor" type="String" required="false"
                         default="#45484D"/>
    <!-- Tooltip, der über dem Icon angezeigt werden soll. -->
    <composite:attribute name="tooltip" required="false"
                         type="java.lang.String" default="..."/>
    <!-- Steuert das Verhalten: normal, button-only, input-only -->
    <composite:attribute name="mode" type="String" default="normal"/>
    <!-- Ob die Komponente deaktivert ist oder nicht. -->
    <composite:attribute name="disabled" type="Boolean" default="false"/>
    <!-- Ob die Darstellung nur lesend erfolgen soll -->
    <composite:attribute name="readonly" type="Boolean" default="false"/>
    <!-- Die CSS-Klasse für den Eingabebereich. Zur Zeit nicht implementiert-->
    <composite:attribute name="inputStyleClass" type="String"/>
</composite:interface>

<composite:implementation>
    <!-- Der Attribut-Inhalt der "action" wird durch das Composite-Attribut ueberschrieben.
         Die Angabe ist dennoch Pflicht, da andernfalls kein JSF-Attribut jsp:action, welches
         "cc.attrs.action" entspricht, möglich wäre. -->
    <!-- cc.attrs.inputStyleClass ist nicht implementiert -->

    <!-- Icon-Name-Switch für fontawesome [4 | 5] -->
    <ui:param name="fontawesome5"
              value="#{fn:startsWith(cc.attrs.icon, 'fa-') or fn:startsWith(cc.attrs.icon, 'fab-') or fn:startsWith(cc.attrs.icon, 'fas-') or fn:startsWith(cc.attrs.icon, 'far-') or fn:startsWith(cc.attrs.icon, 'fal-')} "/>
    <ui:param name="iconName"
              value="#{(fn:startsWith(fontawesome5, 'true')) ?  cc.attrs.icon : 'icon-'.concat(cc.attrs.icon)}"/>

    <div class="action-input input-group">

        <!-- enabled and normal or input-only -->
        <ui:fragment
                rendered="#{not cc.attrs.readonly and not cc.attrs.disabled and cc.attrs.mode ne 'button-only'}">
            <input type="text"
                   class="form-control#{existsValidationError ? ' invalid': ''}"
                   jsf:id="#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                   placeholder="#{cc.attrs.placeholder}" jsf:value="#{cc.attrs.value}">
                <f:attribute name="disabled"
                             value="#{cc.attrs.mode eq 'button-only' and not cc.attrs.disabled}"/>
                <f:attribute name="maxlength"
                             value="#{not cc.attrs.disabled?cc.attrs.maxlength:null}"/>
            </input>
        </ui:fragment>

        <!-- disabled or button-only -->
        <ui:fragment
                rendered="#{not cc.attrs.readonly and (cc.attrs.disabled or cc.attrs.mode eq 'button-only')}">
            <input type="text"
                   class="form-control#{existsValidationError ? ' invalid': ''} #{cc.attrs.disabled?'disabled':''} #{cc.attrs.mode eq 'button-only'?'button-only':''}"
                   jsf:id="#{jsfHelper.escapeIdentifier(cc.attrs.reference)}-disabled"
                   placeholder="#{cc.attrs.placeholder}" value="#{cc.attrs.value}">
                <f:attribute name="disabled"
                             value="#{cc.attrs.mode eq 'button-only' or cc.attrs.disabled}"/>
                <f:attribute name="maxlength"
                             value="#{not cc.attrs.disabled?cc.attrs.maxlength:null}"/>
            </input>
        </ui:fragment>

        <!-- readonly -->
        <ui:fragment
                rendered="#{cc.attrs.readonly}">
            <h:outputText
                    styleClass="form-control#{existsValidationError ? ' invalid': ''} #{cc.attrs.readonly?'readonly':''} #{cc.attrs.mode eq 'button-only'?'button-only':''}"
                    id="readonly_#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                    value="#{cc.attrs.value}"/>
        </ui:fragment>

        <a data-delay="100" data-trigger="hover" data-title=""
           data-placement="top" data-content="#{cc.attrs.tooltip}"
           data-toggle="#{empty cc.attrs.tooltip?'':'tooltip'}"
           class="btn btn-link btn-tooltip #{empty cc.attrs.tooltip?'':'rf-popover'}"
           data-original-title="" title="">
            <button type="submit" jsf:id="buttonIcon" jsf:action="DEFAULT_ACTION"
                    class="btn btn-icon btn-icon-small input-group-addon #{cc.attrs.mode eq 'input-only' and not cc.attrs.disabled?'input-only':''}">
                <f:attribute name="disabled"
                             value="#{cc.attrs.readonly or cc.attrs.disabled or cc.attrs.mode eq 'input-only'}"/>
                <span class="icon #{iconName}"
                      style="color: #{cc.attrs.iconColor}"> </span>
            </button>
        </a>

    </div>

</composite:implementation>

</html>