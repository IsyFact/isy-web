<html xmlns="http://www.w3.org/1999/xhtml"
        xmlns:composite="http://java.sun.com/jsf/composite"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:p="http://xmlns.jcp.org/jsf/passthrough">

    <!-- Ein Eingabefeld innerhalb Formularen. -->

    <composite:interface preferred="false" shortDescription="DEPRECATED This module is deprecated and will be removed in a future release. It is recommended to use isy-angular-widgets instead.">

        <!-- Die Referenz des Objekts. -->
        <composite:attribute name="reference" required="true" />

        <!-- Erlaubt, eine spezielle ID zu setzen, um die Komponente z.B. für JavaScript oder Tests zugreifbar zu machen. Diese wird im Attribut data-isy-custom-id eingetragen. -->
        <composite:attribute name="customId" required="false" />

        <!-- Der Wert für das Databinding im Eingabefeld -->
        <composite:attribute name="value" required="true" />
    <!-- Ob die Eingabe eine Pflichteingabe ist. -->
        <composite:attribute name="required" type="Boolean" default="false" />
        <!-- Ob die Bearbeitung aktiviert ist oder nicht-->
        <composite:attribute name="disabled" type="Boolean" default="false" />
        <!--Ob auf das Feld nur lesend zugegriffen wird -->
        <composite:attribute name="readonly" type="Boolean" default="false" />
        <!-- Der Text für das Label -->
        <composite:attribute name="label" type="String" required="false" />
        <!-- Die CSS-Klasse für das Label. -->
        <composite:attribute name="labelStyleClass" type="String" default="col-lg-6" />
        <!-- Die CSS-Klasse für den Eingabebereich. -->
        <composite:attribute name="inputStyleClass" type="String" default="col-lg-6" />
        <!-- Die CSS-Klasse für die Textarea. -->
        <composite:attribute name="textareaStyleClass" type="String" default="" />
        <!-- Der Tooltip, welcher angezeigt wird. -->
        <composite:attribute name="tooltip" type="String" required="false" />
        <!-- Der Platzhalter, welcher im Eingabefeld angezeigt wird. -->
        <composite:attribute name="placeholder" type="String" required="false" />

        <!-- Die Anzahl an Zeilen. -->
        <composite:attribute name="rows" type="Integer" required="false" default="5" />
        <!-- Die Anzahl an Spalten -->
        <composite:attribute name="cols" type="Integer" required="false" />
        <!-- Die maximal Anzahl von Zeichen -->
        <composite:attribute name="maxlength" type="Integer" required="false" default="4000" />
        <!-- Zur aktuellen Druckansicht-Anzeige aus dem BasisModel. -->
        <composite:attribute name="showPrintView" type="Boolean"
                default="#{not empty basisModel and basisModel.showPrintView}" />
        <!-- Ein spezifisches Validation-Model, falls benötigt. -->
        <composite:attribute name="validationModel" required="false" default="#{validationModel}" />
        <!-- Eine spezifsche globale Konfiguration, falls benötigt. -->
        <composite:attribute name="globalConfig" required="false" default="#{globalConfigurationModel}" />
    </composite:interface>

    <composite:implementation>

        <!-- Validierungsfehler bestimmen -->
        <ui:param name="validationMessages"
                value="#{cc.attrs.validationModel.getValidationMessagesForReference(cc.attrs.reference)}" />
        <ui:param name="existsValidationError"
                value="#{not empty validationMessages}" />

        <div class="form-group#{existsValidationError ? ' has-error has-feedback': ''}"
                data-isy-custom-id="#{cc.attrs.customId}" >

            <label class="control-label#{cc.attrs.required ? ' mandatory' : ''} #{cc.attrs.labelStyleClass}"
                    for="#{cc.clientId}:#{jsfHelper.escapeIdentifier(cc.attrs.reference)}">
                <h:outputText value="#{cc.attrs.label}"/>
            </label>

            <div class="#{cc.attrs.inputStyleClass}">
                <h:inputTextarea
                        styleClass="form-control#{existsValidationError ? ' invalid': ''} #{not empty cc.attrs.textareaStyleClass ? cc.attrs.textareaStyleClass : ''}"
                        cols="#{cc.attrs.cols}" readonly="#{cc.attrs.readonly}"
                        rows="#{cc.attrs.rows}" title="#{cc.attrs.tooltip}"
                        value="#{cc.attrs.value}" id="#{jsfHelper.escapeIdentifier(cc.attrs.reference)}"
                        p:maxlength="#{cc.attrs.maxlength}"
                        p:placeholder="#{cc.attrs.placeholder}"
                        disabled="#{cc.attrs.showPrintView or cc.attrs.disabled}" />
            </div>

            <!-- Bei Validierungsfehlern -->
            <ui:fragment rendered="#{existsValidationError and cc.attrs.globalConfig.jsEnabled}">
                <span class="form-control-feedback without-input-group-addon">
                    <a data-delay="100" data-trigger="hover" data-title="" data-placement="top"
                            data-content="#{cc.attrs.validationModel.getCombinedValidationMessageForReference(cc.attrs.reference)}"
                            data-toggle="tooltip" class="btn btn-link rf-popover" data-original-title="" title="">
                        <span class="icon icon-info"></span>
                    </a>
                </span>
            </ui:fragment>

        </div>
    </composite:implementation>

</html>
