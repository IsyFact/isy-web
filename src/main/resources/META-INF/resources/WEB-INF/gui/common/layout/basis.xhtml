<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:isy="http://java.sun.com/jsf/composite/isyfact"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:sf="http://www.springframework.org/tags/faces"
                xmlns:debug="http://java.sun.com/jsf/composite/debug">

    <html class="no-js">
    <!-- L채dt 체bergreifende Maskentexte in die Variable 'msg'-->
    <f:loadBundle basename="resources.nachrichten.maskentexte" var="msg"/>
    <f:loadBundle basename="resources.nachrichten.plisweb_maskentexte" var="msg_plisweb"/>
    <!-- L채dt flowspezifische Maskentexte aus der Konfigurationsdatei 'Flow-Name'.properties
    im Ordner "resources/nachrichten/maskentexte" in die Variable 'msg_currentflow', wenn die Konfigurationsdatei
    vorhanden ist. -->
    <f:loadBundle
            basename="#{not empty globalFlowModel.pathToResourcesBundleCurrentFlow ? globalFlowModel.pathToResourcesBundleCurrentFlow : 'resources.nachrichten.nomessages' }"
            var="msg_currentflow"/>

    <f:view contentType="text/html"
            locale="#{empty localeConfiguration.ermittleForcedLocale() ? '' : localeConfiguration.ermittleForcedLocale()}">
        <h:head>
            <title><h:outputText value="${title}"/><ui:insert name="titel"/><h:outputText
                    value="#{titlesHelper.ermittleVersionsnummer()}"/></title>
            <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
            <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
            <meta name="description" content=""/>
            <meta name="HandheldFriendly" content="True"/>
            <meta name="viewport" content="width=device-width"/>

            <ui:fragment>
                <link rel="stylesheet" href="${request.contextPath}/app/resources/color.css" type="text/css"
                      media="screen"/>
                <link rel="stylesheet" href="#{resource['/css/isyweb.css']}" type="text/css"/>
                <ui:fragment rendered="#{not basisModel.showPrintView}">
                    <link rel="stylesheet" href="#{resource['/css/styles.css']}"
                          type="text/css" media="screen"/>
                </ui:fragment>


                <!-- Custom Style aus isy-web einbinden, falls vorhanden -->
                <h:outputStylesheet
                        rendered="#{not empty facesContext.externalContext.getResource('/resources/default/css/custom-styles.css') and not basisModel.showPrintView}"
                        library="default" name="css/custom-styles.css" media="screen"/>
                <ui:fragment
                        rendered="#{not basisModel.showPrintView and not empty facesContext.externalContext.getResource('/css/custom-styles.css') and empty facesContext.externalContext.getResource('/resources/default/css/custom-styles.css')}">
                    <!-- Falls ohne Versionierung-->
                    <link rel="stylesheet" href="${request.contextPath}/app/resources/css/custom-styles.css"
                          type="text/css" media="screen"/>
                </ui:fragment>

                <ui:fragment rendered="#{not basisModel.showPrintView}">
                    <link rel="stylesheet" href="#{resource['/css/print.css']}"
                          type="text/css" media="print"/>
                </ui:fragment>


                <!-- Custom Style aus isy-web einbinden, falls vorhanden -->
                <h:outputStylesheet
                        rendered="#{not empty facesContext.externalContext.getResource('/resources/default/css/custom-print.css') and not basisModel.showPrintView}"
                        library="default" name="css/custom-print.css" media="print"/>

                <ui:fragment
                        rendered="#{not basisModel.showPrintView and not empty facesContext.externalContext.getResource('/css/custom-print.css') and empty facesContext.externalContext.getResource('/resources/default/css/custom-print.css')}">
                    <!-- Falls ohne Versionierung-->
                    <link rel="stylesheet" href="${request.contextPath}/app/resources/css/custom-print.css"
                          type="text/css" media="print"/>

                </ui:fragment>
            </ui:fragment>

            <ui:fragment>
                <ui:fragment rendered="#{basisModel.showPrintView}">
                    <link rel="stylesheet" href="#{resource['/css/print.css']}"
                          type="text/css" media="screen,print"/>
                </ui:fragment>

                <!-- Custom Style aus isy-web einbinden, falls vorhanden -->
                <h:outputStylesheet
                        rendered="#{not empty facesContext.externalContext.getResource('/resources/default/css/custom-print.css') and basisModel.showPrintView}"
                        library="default" name="css/custom-print.css" media="screen, print"/>

                <ui:fragment
                        rendered="#{basisModel.showPrintView and not empty facesContext.externalContext.getResource('/css/custom-print.css') and empty facesContext.externalContext.getResource('/resources/default/css/custom-print.css')}">
                    <!-- Falls ohne Versionierung-->
                    <link rel="stylesheet" href="${request.contextPath}/app/resources/css/custom-print.css"
                          type="text/css" media="screen, print"/>

                </ui:fragment>
            </ui:fragment>

            <ui:fragment
                    rendered="#{not empty globalConfigurationModel and globalConfigurationModel.jsEnabled}">
                <h:outputScript name="lib/jquery.min.js"/>
                <h:outputScript name="lib/bootstrap.min.js"/>
                <h:outputScript name="lib/modernizr.js"/>
                <h:outputScript name="plugins/functions.js"/>
                <h:outputScript name="plugins/bootstrap-datepicker.js"/>
                <h:outputScript name="plugins/bootstrap-timepicker.js"/>
                <h:outputScript name="plugins/bootstrap-select.min.js"/>
                <h:outputScript name="plugins/bootstrap-selectlist.js"/>
                <h:outputScript name="plugins/bootstrap-browsecollect.js"/>
                <h:outputScript name="plugins/jquery.utils.js"/>
                <h:outputScript name="plugins/jquery.inputmask.bundle.js"/>
                <h:outputScript name="plugins/jquery.hotkeys.js"/>
                <h:outputScript name="plugins/jquery.visible.min.js"/>
                <h:outputScript name="plugins/extendedBootstrapTab.js"/>
                <h:outputScript name="plugins/harmonizePanelHeadlineWidth.js"/>
                <h:outputScript name="plugins/infoPanel.js"/>
                <h:outputScript name="plugins/mainNavigation.js"/>
                <h:outputScript name="plugins/magnific-popup.min.js"/>
            </ui:fragment>

            <ui:insert name="headIncludes"/>
        </h:head>
        <h:body role="document">
            <isy:specialCharPicker/>
            <isy:charPickerDinNorm/>

            <!-- Multipart Variable zur Verf체gung stellen -->
            <h:panelGroup id="multipartArea">
                <input id="multipartFormEnabled" type="hidden" disabled="true"
                       value="#{globalFlowModel.multipartForm}"/>
            </h:panelGroup>

            <!-- BEGINN: Seitenelemente-Zustand definieren -->
            <ui:param name="informationsbereichAnzeigen"
                      value="#{not empty basisModel.informationsbereichModel and basisModel.informationsbereichModel.anzeigen}"/>
            <!-- ENDE: Seitenelemente-Zustand definieren -->

            <!-- BEGINN: CSS-Klassen definieren -->
            <!-- Definiere CSS-Klassen, falls das Info-Panel angezeigt werden soll. -->
            <ui:param name="cssKlasseInhaltInfoPanel"
                      value="#{informationsbereichAnzeigen ? 'col-lg-9' : 'col-lg-12'}"/>
            <ui:param name="cssKlasseOuterContainerInfoPanel"
                      value="#{informationsbereichAnzeigen ? 'show-info-panel' : ''}"/>
            <!-- ENDE: CSS-Klassen definieren -->

            <div class="outer-container #{cssKlasseOuterContainerInfoPanel}">
                <div class="main-header">
                    <ui:include src="/WEB-INF/gui/common/seitenelemente/screenreaderinfosection.xhtml"/>
                    <ui:include src="/WEB-INF/gui/common/seitenelemente/header.xhtml"/>

                    <div id="main-nav" class="navbar navbar-default" role="navigation" tabindex="-1">
                        <isy:navigationMenu navMenuModel="#{sessionScope.navigationmenu}"/>
                        <ui:include src="/WEB-INF/gui/common/seitenelemente/breadcrumb.xhtml"/>
                        <ui:include src="/WEB-INF/gui/common/seitenelemente/locationBreadcrumb.xhtml"/>
                    </div>
                    <ui:include src="/WEB-INF/gui/common/seitenelemente/headline.xhtml"/>
                    <ui:insert name="printMetaInformation"/>
                </div>

                <div id="content" role="main">

                    <ui:insert name="seitentoolbar"/>
                    <div class="container-fluid maincontent">
                        <div class="row">
                            <div class="#{cssKlasseInhaltInfoPanel}">
                                <ui:insert name="inhalt"/>
                            </div>

                            <ui:fragment rendered="#{informationsbereichAnzeigen}">
                                <div class="col-lg-3">
                                    <ui:include
                                            src="/WEB-INF/gui/common/seitenelemente/informationsbereich.xhtml"/>
                                </div>
                            </ui:fragment>
                        </div>
                    </div>
                </div>

            </div>

            <!-- Platzhalter f체r modale Dialoge. -->

            <ui:insert name="modalDialogPlaceholder"/>

            <!-- Der Spinner, der bei einem AJAX-Request angezeigt wird. -->
            <div class="modal-loading"/>

            <!-- Gibt den AJAX-Status aus -->
            <div class="ajax-status" style="display:none">
                <span>complete</span>
            </div>

            <!-- Fehlertext f체r AJAX-Fehler rendern -->
            <h:form id="ajaxErrorMessageForm">
                <h:inputHidden id="ajaxErrorMessageTitle" value="#{globalFlowModel.ajaxErrorMessageTitle}"/>
                <h:inputHidden id="ajaxErrorMessage" value="#{globalFlowModel.ajaxErrorMessage}"/>
            </h:form>

            <ui:fragment
                    rendered="#{not empty globalConfigurationModel and globalConfigurationModel.jsEnabled}">
                <h:outputScript name="js/isyweb.bundle.js"/>
                <ui:insert name="script"/>
            </ui:fragment>

            <h:panelGroup id="formArea">
                <ui:insert name="form"/>
            </h:panelGroup>
        </h:body>
    </f:view>
    </html>
</ui:composition>
